{"version":3,"sources":["utils.js","panels/Home.js","App.js","index.js"],"names":["getTopic","userId","a","console","log","reqOptions","options","method","body","JSON","stringify","headers","Accept","mode","fetch","res","Home","id","fetchedUser","go","href","target","title","before","photo_200","src","description","city","first_name","last_name","App","useState","activePanel","setActivePanel","setUser","size","popout","setPopout","useEffect","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"0qBAwCeA,EAvCD,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DAEC,GAEdC,QAAQC,IAAIH,GAJC,8DAQPI,EAAa,CACf,OAAUJ,GAGRK,EAAU,CACZC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACL,eAAgB,mBAChBC,OAAQ,mBACR,mBAAoB,kBAExBC,KAAM,QApBG,SAuBKC,MAvBL,8DAuBgBR,GAvBhB,cAuBPS,EAvBO,OAkCbZ,QAAQC,IAAIW,GAlCC,kBAoCNA,GApCM,4CAAH,sDC4CCC,EAjCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAQC,GAAX,EAAOC,GAAP,EAAWD,aAAX,OACZ,kBAAC,IAAD,CAAOD,GAAIA,GACV,kBAAC,IAAD,gCACA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAMG,KAAK,0CAA0CC,OAAO,UAA5D,uEACCH,GACA,kBAAC,IAAD,CAAOI,MAAM,oCACZ,kBAAC,IAAD,CACCC,OAAQL,EAAYM,UAAY,kBAAC,IAAD,CAAQC,IAAKP,EAAYM,YAAgB,KACzEE,YAAaR,EAAYS,MAAQT,EAAYS,KAAKL,MAAQJ,EAAYS,KAAKL,MAAQ,IAFpF,UAIKJ,EAAYU,WAJjB,YAI+BV,EAAYW,WACxC7B,EAASkB,EAAYD,SCiBda,EAhCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVb,EAFU,KAEGgB,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAeI,KAAK,WAHxC,mBAGVC,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAApC,EAAA,sEACoBqC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRJ,EAAU,MAHX,4CARe,sBACfE,IAAOG,WAAU,YAAiC,IAAD,IAA7BC,OAAUC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASvC,KAAK2C,WAAWC,aAAaN,OALzB,mCAafO,KACE,IAMH,OACC,kBAAC,IAAD,CAAMrB,YAAaA,EAAaI,OAAQA,GACvC,kBAAC,EAAD,CAAMnB,GAAG,OAAOC,YAAaA,EAAaC,GANjC,SAAAmC,GACVrB,EAAeqB,EAAEC,cAAcC,QAAQC,SCvBzClB,IAAOC,KAAK,gBAEZkB,IAASC,OAAO,kBAAC,EAAD,MAASZ,SAASa,eAAe,W","file":"static/js/main.84c59bfb.chunk.js","sourcesContent":["\nconst getTopic = async (userId) => {\n\n    let vkTopic = \"\";\n\n    console.log(userId);\n\n    const url = `https://physical-transformation.online/api/v1/member/topic/`;\n\n    const reqOptions = {\n        \"userId\": userId\n    }\n\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(reqOptions),\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n        mode: 'cors',\n    }\n\n    const res = await fetch(url, options);\n        // .then((response) => response.json())\n        // .then((data) => \n        //     {\n        //         vkTopic = data.result;\n        //         console.log(data);\n        //         console.log(data.result);\n        //         console.log(vkTopic);\n        //     })\n        // .catch((error) => console.log(error));\n\n    console.log(res);\n\n    return res;\n}\n\nexport default getTopic;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport { Link } from '@vkontakte/vkui';\nimport getTopic from '../utils.js';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Physical Transformation</PanelHeader>\n\t\t<Div>\n\t\t\t<Link href=\"https://physical-transformation.online/\" target=\"_blank\">Открыть сайт</Link>\n\t\t\t{fetchedUser &&\n\t\t\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t\t\t<Cell\n\t\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200} /> : null}\n\t\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t\t>\n\t\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t\t\t{ getTopic(fetchedUser.id) }\n\t\t\t\t\t</Cell>\n\t\t\t\t</Group>}\n\t\t</Div>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tid: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data } }) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}